{"version":3,"sources":["../../src/models/warn.js"],"names":["module","exports","sequelize","DataTypes","Warn","define","hash","type","STRING","allowNull","value","INTEGER","reason","author"],"mappings":";;AAAA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,MAAIC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AAClC;AACAC,UAAM,EAAEC,MAAM,oBAAUC,MAAlB,EAA0BC,WAAW,KAArC,EAF4B;AAGlCC,WAAO,EAAEH,MAAM,oBAAUI,OAAlB,EAA2BF,WAAW,KAAtC,EAH2B;AAIlCG,YAAQ,EAAEL,MAAM,oBAAUC,MAAlB,EAA0BC,WAAW,KAArC,EAJ0B;AAKlCI,YAAQ,EAAEN,MAAM,oBAAUC,MAAlB,EAA0BC,WAAW,KAArC;AAL0B,GAAzB,CAAX;;AASF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEE,SAAOL,IAAP;AACD,CAxCD","file":"warn.js","sourcesContent":["import Sequelize from 'sequelize'\r\n\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  let Warn = sequelize.define('Warn', {\r\n    // id: { type: Sequelize.INTEGER, primaryKey: true, defaultValue: Sequelize.INTEGER, autoIncrement: true }, // UUID или не UUID? Он ублюдский))\r\n    hash: { type: Sequelize.STRING, allowNull: false },\r\n    value: { type: Sequelize.INTEGER, allowNull: false },\r\n    reason: { type: Sequelize.STRING, allowNull: false },\r\n    author: { type: Sequelize.STRING, allowNull: false }\r\n  }\r\n)\r\n\r\n// module.exports = (sequelize, DataTypes) => {\r\n//   let User = sequelize.define('User', {\r\n//     id: { type: Sequelize.UUID, primaryKey: true, defaultValue: Sequelize.UUIDV1 },\r\n//     number: { type: Sequelize.INTEGER, autoIncrement: true },\r\n//     firstname: Sequelize.STRING,\r\n//     secondname: Sequelize.STRING,\r\n//     patronymic:  { type: Sequelize.STRING, allowNull: true },\r\n//     passSerial: Sequelize.INTEGER,\r\n//     passNumber: Sequelize.INTEGER,\r\n//     birth: Sequelize.DATE,\r\n//     email: { type: Sequelize.STRING, allowNull: true },\r\n//     phoneMain: Sequelize.STRING,\r\n//     phoneAdditional: { type: Sequelize.STRING, allowNull: true },\r\n//     services:  { type: Sequelize.TEXT, allowNull: true },\r\n//     password: Sequelize.STRING,\r\n//     passwordConfirm: Sequelize.STRING,  \r\n//     userAgreement: { type: Sequelize.BOOLEAN, defaultValue: true },  \r\n//     dataProcessed: { type: Sequelize.BOOLEAN, defaultValue: true },\r\n//     offerAgreement: { type: Sequelize.BOOLEAN, defaultValue: true },  \r\n//     offerAgreement: { type: Sequelize.BOOLEAN, defaultValue: true },\r\n//     bitrixLeadId: { type: Sequelize.INTEGER, allowNull: true },\r\n//     bitrixContactId: { type: Sequelize.INTEGER, allowNull: true },  \r\n//   }\r\n// )\r\n\r\n//   User.associate = function(models) {\r\n//     models.User.hasMany(models.Task)\r\n//   }\r\n\r\n  return Warn\r\n}"]}