{"version":3,"sources":["../src/bot.js"],"names":["Telegraf","require","BOT_TOKEN","process","env","bot","chatId","webhookReply","telegram","sendMessage","console","log","error","catch","err","ctx","updateType","reply","start","help","command","settings","getStatus","antidot","infected","timer","message","text","split","warn","hash","value","parseInt","author","from","username","shift","reason","join","warnData","setWarn","firstname","secondname","faculty","undefined","updValue","setParameter","setTimeout","launch","module","exports"],"mappings":"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","file":"bot.js","sourcesContent":["const Telegraf  = require('telegraf')\r\nimport db from './models/index'\r\n\r\nconst { BOT_TOKEN } = process.env\r\n\r\n\r\n\r\nlet bot = {}\r\nlet chatId = 293233794 // Мой ИД для уведомлений\r\n\r\n\r\ntry {\r\n    bot = new Telegraf(BOT_TOKEN, { webhookReply: false })\r\n    bot.telegram.sendMessage(chatId, 'Я перезагрузился и теперь активен. Жду Ваших приказаний, сэр!')\r\n    console.log(`BOT IS ENABLED`)\r\n} catch(error) {\r\n    console.log(error)\r\n}\r\n\r\n// Base commands\r\nbot.catch((err, ctx) => {\r\n    console.log(`Ooops, encountered an error for ${ctx.updateType}`, err)\r\n    ctx.reply(`Произошла ошибка. Чекай консоль или читай ниже:\\n\\n`)\r\n})\r\nbot.start(ctx => ctx.reply('Привет!\\nЯ создан для обновления информации в профилях иммунов.\\n\\n/help - список команд'))\r\nbot.help(ctx => ctx.reply('Команды:\\n/status для получения текущего положения дел в мире\\n/infected [%] - установить долю инфицированных\\n/antidot [%] - установить % готовности антидота\\n/timer [XX:XX] - установить время дедлайна'))\r\n\r\n// Get commands\r\nbot.command('/status', async ctx => {\r\n    const settings = await db.getStatus()\r\n    const { antidot, infected, timer } = settings\r\n    await ctx.reply(`Прогресс разработки антидота: ${antidot}%\\nДоля зараженных: ${infected}%\\nВремя таймера: ${timer}`)\r\n})\r\n\r\n// Set commands\r\nbot.command(`/warn`, async ctx => {\r\n    let message = ctx.message.text.split(' ')\r\n    // console.log(ctx.from)\r\n    let warn = {\r\n        hash: message[1],\r\n        value: parseInt(message[2]),\r\n        author: ctx.from.username\r\n    }\r\n    message.shift()\r\n    message.shift()\r\n    message.shift()\r\n    warn.reason = message.join(' ')\r\n    // Внесение предупреждения в базу\r\n    const warnData = await db.setWarn(warn)\r\n    console.log(warnData)\r\n    await ctx.reply(`Иммун ${warnData.hash} ${warnData.firstname} ${warnData.secondname} (${warnData.faculty}) получил снижение иммунитета на ${warn.value}% по причине: ${warn.reason}`)\r\n})\r\nbot.command(`/infected`, async (ctx) => {\r\n    console.log(ctx.message)\r\n    let message = ctx.message.text.split(' ')\r\n    if(message[1] != undefined) {\r\n        let updValue = await db.setParameter('infected', message[1])\r\n        await ctx.reply(`Обновлено. /status для просмотра текущих параметров.`)\r\n    } else {\r\n        await ctx.reply('Для обновления: /infected 54')\r\n    }\r\n})\r\nbot.command(`/antidot`, async (ctx) => {\r\n    console.log(ctx.message)\r\n    let message = ctx.message.text.split(' ')\r\n    if(message[1] != undefined) {\r\n        let updValue = await db.setParameter('infected', message[1])\r\n        await ctx.reply(`Обновлено. /status для просмотра текущих параметров.`)\r\n    } else {\r\n        await ctx.reply('Для обновления: /antidot 54')\r\n    }\r\n})\r\nbot.command(`/timer`, async (ctx) => {\r\n    console.log(ctx.message)\r\n    let message = ctx.message.text.split(' ')\r\n    if(message[1] != undefined) {\r\n        let updValue = await db.setParameter('timer', message[1])\r\n        updValue ? await ctx.reply(`Обновлено. /status для просмотра текущих параметров.`) : await ctx.reply(`Что-то пошло не так :()`)\r\n    } else {\r\n        await ctx.reply('Для обновления: /timer 23:00')\r\n    }\r\n})\r\n\r\n\r\nsetTimeout(\r\n    () => bot.launch(), 4000\r\n)\r\n\r\n\r\n\r\nmodule.exports = bot"]}